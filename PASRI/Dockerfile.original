# Web Debug Image
# ----------------------------------------------------
# - Will always be mounted with external file system.
#   Image does NOT need to run standalone.
#   This allows builds of image to be short
#   and rely on the $STARTUP_FILE
# ----------------------------------------------------
# Usage:
#   build manually
#     command: $ docker build -t projectname-web .
#   run pre-packaged files
#     command: $ docker run --rm -i -p 3000:80 --name projectname-web -t projectname-web .
#   run local files
#     command: $ docker run --rm -i -p 3000:80 --name projectname-web -v ${PWD}:/app -t projectname-web .

FROM microsoft/dotnet:2.1-aspnetcore-runtime AS base

# Environment Variables
# ---------------------

ENV NUGET_XMLDOC_MODE skip
ENV STARTUP_FILE /app/dockerfile.web.debug.startup

# Install additional tooling
# --------------------------
# dos2unix: used to prevent windows from converting our line-endings
# RUN apt-get -qy update && apt-get -qy install dos2unix 
# RUN apt-get -qy install --no-upgrade --no-install-recommends apt-transport-https apt-utils curl software-properties-common iputils-ping net-tools gnupg 
# RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
# RUN curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list
# RUN apt-get -qy update && ACCEPT_EULA=Y apt-get install -qy msodbcsql17 mssql-tools unixodbc-dev locales
# RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile
# RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
# RUN apt-get install -qy 
# RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
# RUN locale-gen
# --------------------------

# Buildtime
# ---------

COPY . /app
WORKDIR /app

FROM microsoft/dotnet:2.1-sdk AS build
WORKDIR /src
COPY ["PASRI/PASRI.API.csproj", "PASRI/"]
RUN dotnet restore "PASRI/PASRI.API.csproj"
COPY . .
WORKDIR "/src/PASRI"
RUN dotnet build "PASRI.API.csproj" -c Release -o /app

FROM build AS publish
RUN dotnet publish "PASRI.API.csproj" -c Release -o /app

FROM base AS final
WORKDIR /app
COPY --from=publish /app .

EXPOSE 44309

# Runtime
# -------------------------

ENTRYPOINT dos2unix $STARTUP_FILE && \
           chmod +x $STARTUP_FILE && \
           /bin/bash $STARTUP_FILE